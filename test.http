@host = http://localhost:3001/api
@json = application/json

### Homepage
GET {{host}}/ HTTP/1.1

### Homepage Page 2
GET {{host}}/?page=2 HTTP/1.1


### User Register
POST {{host}}/register HTTP/1.1
content-type: {{json}}

{
    "email": "q@qq.com",
    "password": "123456",
    "username": "q"
}


### User Login
# @name user_login
POST {{host}}/login HTTP/1.1
content-type: {{json}}

{
    "email": "q@qq.com",
    "password": "123456"
}


### User Info
# @name user_info
GET {{host}}/user/q HTTP/1.1
Authorization: Bearer {{user_login.response.body.$.token}}


### Users List
GET {{host}}/user/list HTTP/1.1
Authorization: Bearer {{user_login.response.body.$.token}}


### User Settings
GET {{host}}/settings HTTP/1.1
Authorization: Bearer {{user_login.response.body.$.token}}


### Update User Settings
POST {{host}}/settings/update HTTP/1.1
Authorization: Bearer {{user_login.response.body.$.token}}
content-type: {{json}}

{
    "_id": "4859a909-35e9-4286-8d51-89f4d1d7973c",
    "avatar": "/images/pnpm.svg",
    "bio": "No pain, no gain.",
    "birthday": "2016-03-14",
    "email": "q@qq.com",
    "gender": 1,
    "job": "Student",
    "nickname": "Q",
    "password": null,
    "phone": "14624351173",
    "username": "q"
}


### My Topics
GET {{host}}/my-topics HTTP/1.1
Authorization: Bearer {{user_login.response.body.$.token}}


### My Favorites
GET {{host}}/my-favorites HTTP/1.1
Authorization: Bearer {{user_login.response.body.$.token}}


### Favor or Disfavor a Topic
POST {{host}}/favor HTTP/1.1
Authorization: Bearer {{user_login.response.body.$.token}}
content-type: {{json}}

{
    "topic_id": "edb5c8d7-be7f-4242-923f-b4e4505a57bc"
}


### Topic Initiate
# @name topic_initiate
POST {{host}}/topic/initiate HTTP/1.1
Authorization: Bearer {{user_login.response.body.$.token}}
content-type: {{json}}

{
    "content": "üéâÔ∏è üéâÔ∏è üéâÔ∏è See how the exact same Medium.com clone (called Conduit) is built using different frontends and backends. Yes, you can mix and match them, because they all adhere to the same API spec ‚ù§Ô∏è ‚ù§Ô∏è ‚ù§Ô∏è",
    "tags": [],
    "title": "Welcome to RealWorld project",
    "user_id": "4859a909-35e9-4286-8d51-89f4d1d7973c"
}


### Topic Detail
GET {{host}}/topic/edb5c8d7-be7f-4242-923f-b4e4505a57bc HTTP/1.1


### Topic Update GET
GET {{host}}/topic/update/edb5c8d7-be7f-4242-923f-b4e4505a57bc HTTP/1.1
Authorization: Bearer {{user_login.response.body.$.token}}


### Topic Update POST
POST {{host}}/topic/update HTTP/1.1
Authorization: Bearer {{user_login.response.body.$.token}}
content-type: {{json}}

{
    "_id": "edb5c8d7-be7f-4242-923f-b4e4505a57bc",
    "content": "üéâÔ∏è üéâÔ∏è üéâÔ∏è See how the exact same Medium.com clone (called Conduit) is built using different frontends and backends. Yes, you can mix and match them, because they all adhere to the same API spec üéâÔ∏è üéâÔ∏è üéâÔ∏è ",
    "tags": ["Realword", "API", "conduit"],
    "title": "Welcome to RealWorld project",
    "user_id": "4859a909-35e9-4286-8d51-89f4d1d7973c"
}


### Topic Comment
POST {{host}}/topic/comment HTTP/1.1
Authorization: Bearer {{user_login.response.body.$.token}}
content-type: {{json}}

{
    "content": "It's just a test comment.",
    "topic": "edb5c8d7-be7f-4242-923f-b4e4505a57bc",
    "user_id": "4859a909-35e9-4286-8d51-89f4d1d7973c"
}


### Profile, (User)Someone's Topics
GET {{host}}/profile/q HTTP/1.1
Authorization: Bearer {{user_login.response.body.$.token}}


### Profile, (User)Someone's Favorites
GET {{host}}/profile/q/favorites HTTP/1.1
Authorization: Bearer {{user_login.response.body.$.token}}


### Tag List
GET {{host}}/tags HTTP/1.1


### Tag Info
GET {{host}}/tags/conduit HTTP/1.1
